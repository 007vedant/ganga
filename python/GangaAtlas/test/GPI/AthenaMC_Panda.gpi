# testing structure for AthenaMC application

import re,sys,popen2,time,getpass
from GangaTest.Framework.utils import sleep_until_completed
import os


evgen=Job()
evgen.application=AthenaMC()
evgen.application.mode='evgen'
evgen.application.evgen_job_option='DC3.007004.singlepart_e_Et40.py'
evgen.application.number_events_job=30
evgen.application.atlas_release='14.2.20.3'
evgen.application.verbosity='INFO'
evgen.outputdata=AthenaMCOutputDatasets()
evgen.backend=Panda()
evgen.backend.site='ANALY_SWT2_CPB'
assert (evgen.submit()==True)

simul=Job()
simul.application=AthenaMC()
simul.application.mode='simul'
simul.application.number_events_job=3
simul.application.atlas_release='14.5.0.1'
simul.application.geometryTag = 'ATLAS-GEO-02-01-00'
simul.application.production_name = 'tutorial.007004.single_e_Et40'
simul.inputdata=AthenaMCInputDatasets()
simul.inputdata.DQ2dataset='user09.fredericbrochu.ganga.tutorial.007004.single_e_Et40.evgen.EVNT.jid000163'
simul.inputdata.number_events_file=10
simul.outputdata=AthenaMCOutputDatasets()
simul.splitter=AthenaMCSplitterJob()
simul.splitter.numsubjobs = 3
simul.backend=Panda()
simul.backend.site='ANALY_GLASGOW'
simul.backend.requirements=PandaRequirements()
simul.backend.requirements.cloud='UK'

#
assert(simul.submit()==True)

reco=Job()
reco.application=AthenaMC()
reco.application.mode='recon'
reco.application.number_events_job=3
reco.application.atlas_release='14.5.0.1'
reco.inputdata=AthenaMCInputDatasets()
reco.inputdata.DQ2dataset='user09.fredericbrochu.ganga.user09.tutorial.007004.single_e_Et40.simul.RDO.jid000164'
reco.inputdata.number_events_file=3
reco.outputdata=AthenaMCOutputDatasets()
reco.splitter=AthenaMCSplitterJob()
reco.splitter.numsubjobs = 3
reco.backend=Panda()
reco.backend.site='ANALY_GLASGOW'
reco.backend.requirements=PandaRequirements()
reco.backend.requirements.cloud='UK'

#
assert(reco.submit()==True)


# removing all jobs
evgen.kill()
evgen.remove()
simul.subjobs[0].kill()
simul.subjobs[1].kill()
simul.subjobs[2].kill()
simul.kill()
simul.remove()
reco.subjobs[0].kill()
reco.subjobs[1].kill()
reco.subjobs[2].kill()
reco.kill()
reco.remove()
