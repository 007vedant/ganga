#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

if [ -z "$1" ]
then
    echo "No version number specified"
    exit
fi

VERSION=$1
STAGING_DIR=$HOME/ganga_release_staging/
INSTALL_DIR=/afs/cern.ch/sw/ganga/install/
GIT_URL=git@github.com:ganga-devs/ganga-git-testing.git

echo "-------------"
echo "Fetching repo"
echo "-------------"
mkdir -p $STAGING_DIR
cd $STAGING_DIR
git clone $GIT_URL $VERSION-pre
cd $VERSION-pre
git flow init -d
git config gitflow.prefix.versiontag v
git flow release start $VERSION

echo "--------------"
echo "Installing pre"
echo "--------------"
git archive --prefix=$VERSION-pre/ --format=tar HEAD | gzip >Ganga-$VERSION-pre.tar.gz
cp Ganga-$VERSION-pre.tar.gz $INSTALL_DIR/tarball/
tar xf $INSTALL_DIR/tarball/Ganga-$VERSION-pre.tar.gz --directory $INSTALL_DIR

echo "--------------------"
echo "Installing externals"
echo "--------------------"
$INSTALL_DIR/$VERSION-pre/release/tools/ganga-install-externals $VERSION-pre

echo "-------------------------------"
echo "Creating release notes template"
echo "-------------------------------"
cat << EOF > release/ReleaseNotes-$VERSION
**************************************************************************************************************
$VERSION (`date "+%Y/%m/%d"`)


--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* ...

**************************************************************************************************************
EOF

git add release/ReleaseNotes-$VERSION
git commit -m"Adding release notes template"

echo "----------------------"
echo "Pushing release branch"
echo "----------------------"
git flow release publish $VERSION
git push
